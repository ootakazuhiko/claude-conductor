apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-conductor
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: orchestrator
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1  # Orchestrator should be singleton
  strategy:
    type: Recreate  # Ensure only one instance at a time
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-conductor
      app.kubernetes.io/component: orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claude-conductor
        app.kubernetes.io/component: orchestrator
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-conductor
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: init-workspace
        image: claudeconductor/claude-conductor:latest
        command: ["/bin/bash", "/scripts/init.sh"]
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        - name: logs
          mountPath: /var/log/conductor
        - name: config-data
          mountPath: /home/claude/.conductor
        - name: scripts
          mountPath: /scripts
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      containers:
      - name: orchestrator
        image: claudeconductor/claude-conductor:latest
        imagePullPolicy: Always
        command: ["orchestrator"]
        ports:
        - name: dashboard
          containerPort: 8080
          protocol: TCP
        - name: api
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: CONDUCTOR_MODE
          value: "production"
        - name: CONDUCTOR_LOG_LEVEL
          value: "INFO"
        - name: CONDUCTOR_CONFIG
          value: "/config/config.yaml"
        - name: CONDUCTOR_DASHBOARD_PORT
          value: "8080"
        - name: CONDUCTOR_API_PORT
          value: "8081"
        - name: REDIS_HOST
          value: "claude-conductor-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: claude-conductor-secrets
              key: redis-password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: dashboard
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: dashboard
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: logging-config
          mountPath: /config/logging
          readOnly: true
        - name: workspace
          mountPath: /workspace
        - name: logs
          mountPath: /var/log/conductor
        - name: config-data
          mountPath: /home/claude/.conductor
        - name: scripts
          mountPath: /scripts
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
            add: []
      volumes:
      - name: config
        configMap:
          name: claude-conductor-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: logging-config
        configMap:
          name: claude-conductor-config
          items:
          - key: logging.yaml
            path: logging.yaml
      - name: scripts
        configMap:
          name: claude-conductor-scripts
          defaultMode: 0755
      - name: workspace
        persistentVolumeClaim:
          claimName: claude-conductor-workspace
      - name: logs
        persistentVolumeClaim:
          claimName: claude-conductor-logs
      - name: config-data
        persistentVolumeClaim:
          claimName: claude-conductor-config-data
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
          medium: Memory
      - name: var-tmp
        emptyDir:
          sizeLimit: 50Mi
          medium: Memory
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-conductor-agents
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: agent
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3  # Number of agent replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-conductor
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claude-conductor
        app.kubernetes.io/component: agent
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-conductor-agent
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: agent
        image: claudeconductor/claude-conductor:latest
        imagePullPolicy: Always
        command: ["agent"]
        env:
        - name: CONDUCTOR_MODE
          value: "production"
        - name: CONDUCTOR_LOG_LEVEL
          value: "INFO"
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ORCHESTRATOR_HOST
          value: "claude-conductor"
        - name: ORCHESTRATOR_PORT
          value: "8081"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "pgrep -f 'conductor.agent' > /dev/null"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "pgrep -f 'conductor.agent' > /dev/null"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        - name: logs
          mountPath: /var/log/conductor
        - name: agent-workspace
          mountPath: /agent-workspace
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: claude-conductor-workspace
      - name: logs
        persistentVolumeClaim:
          claimName: claude-conductor-logs
      - name: agent-workspace
        emptyDir:
          sizeLimit: 5Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30