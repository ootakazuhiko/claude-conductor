apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-conductor
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: orchestrator
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-max-body-size: "100m"
    
    # WebSocket support for real-time dashboard
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-For $proxy_add_x_forwarded_for;
      X-Forwarded-Proto $scheme;
      X-Real-IP $remote_addr;
      Host $host;
      Upgrade $http_upgrade;
      Connection "upgrade";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Additional security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
spec:
  ingressClassName: nginx  # Adjust based on your ingress controller
  tls:
  - hosts:
    - conductor.example.com  # Replace with your domain
    secretName: claude-conductor-tls
  rules:
  - host: conductor.example.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-conductor
            port:
              number: 8080
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: claude-conductor
            port:
              number: 8081
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: claude-conductor
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-conductor-api
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # API-specific configurations
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    
    # CORS support for API
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.conductor.example.com  # Replace with your API domain
    secretName: claude-conductor-tls
  rules:
  - host: api.conductor.example.com  # Replace with your API domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-conductor
            port:
              number: 8081
---
# Internal ingress for metrics (Prometheus scraping)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-conductor-metrics
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: metrics
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Restrict access to metrics endpoint
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  ingressClassName: nginx
  rules:
  - host: metrics.conductor.internal  # Internal metrics endpoint
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: claude-conductor
            port:
              number: 9090