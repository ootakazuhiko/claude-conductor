apiVersion: v1
kind: Secret
metadata:
  name: claude-conductor-secrets
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Base64 encoded secrets (example values, replace in production)
  redis-password: Y2xhdWRlLWNvbmR1Y3Rvcg==  # claude-conductor
  api-key: ""  # Add your API key here (base64 encoded)
  jwt-secret: Y2xhdWRlLWNvbmR1Y3Rvci1qd3Qtc2VjcmV0  # claude-conductor-jwt-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: claude-conductor-tls
  namespace: claude-conductor
  labels:
    app.kubernetes.io/name: claude-conductor
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Generate with: kubectl create secret tls claude-conductor-tls --cert=tls.crt --key=tls.key -n claude-conductor --dry-run=client -o yaml
  tls.crt: ""  # Add your certificate here
  tls.key: ""  # Add your private key here